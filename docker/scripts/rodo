#!/usr/bin/env bash
# shellcheck disable=SC2155,SC2086

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"

print_help() {
    cat <<EOF
Usage: $(basename "$0") SCRIPT WORKSPACE [ARGS]
rodones script executor 

available scripts:
$(find ./*.sh | sed "s/.sh//g;s/.\//   /g")
EOF
}

send_telegram_message() {
    curl -X POST "https://api.telegram.org/bot$TELEGRAM_API_KEY/sendMessage" \
        -H "Content-Type: application/json" \
        -d "{ \"chat_id\": \"$TELEGRAM_CHAT_ID\", \"text\": \"$1\" }" >/dev/null 2>&1
    return 0 # silently ignore curl error
}

measure() {
    local CMD="$1"
    local LOGS="/working/logs"
    local ARGS="${*:2}"
    local DATE="$(date +"%FT%H%M%z")"
    local NAME="$CMD""_""$DATE.txt"

    [ -d "$LOGS" ] || mkdir "$LOGS"

    (time "$SCRIPT_DIR/$CMD" $ARGS || send_telegram_message "FAILED!") | { tee "$LOGS/$NAME"; }
    local ELAPSED_TIME="$(grep --color=never "Elapsed time:" "$LOGS/$NAME")"

    [ -n "$ELAPSED_TIME" ] &&
        send_telegram_message "$ELAPSED_TIME" &&
        cat <<EOF | tee -a "$LOGS/$NAME"
==============================================================================
$ELAPSED_TIME
==============================================================================
EOF
}

if [ "$1" = "--help" ]; then
    print_help
else
    measure "$@"
fi
